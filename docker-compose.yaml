version: '3.7'
services:
  order-service:
    image: ${TAG}
    restart: always
    ports:
      - ${PORT}:${PORT}
      - 40000:40000
    security_opt:
      - seccomp:unconfined
    environment:
      - PORT=${PORT}
      - APP_ENV=dev
#      - PAYMENT_KAFKA_CONSUMER_TOPIC=payment-pending
#      - PAYMENT_KAFKA_CONSUMER_GROUP=payment-pending
    env_file:
      - ./src/.env
    depends_on:
      - stockservice
      - paymentservice

#  payment_success:
#    image: ${TAG}
#    restart: always
#    ports:
#      - 40001:40000
#    security_opt:
#      - seccomp:unconfined
#    environment:
#      - APP_ENV=dev
#      - PAYMENT_KAFKA_CONSUMER_TOPIC=payment-success
#      - PAYMENT_KAFKA_CONSUMER_GROUP=payment-success
#    env_file:
#      - ./src/.env
#
#  seller_approval_pending:
#    image: ${TAG}
#    restart: always
#    ports:
#      - 40002:40000
#    security_opt:
#      - seccomp:unconfined
#    environment:
#      - APP_ENV=dev
#      - PAYMENT_KAFKA_CONSUMER_TOPIC=seller-approval-pending
#      - PAYMENT_KAFKA_CONSUMER_GROUP=seller-approval-pending
#    env_file:
#      - ./src/.env
#
#  zoo1:
#    image: registry.faza.io/zookeeper:latest
#    hostname: zoo1
#    ports:
#      - "2181:2181"
#    environment:
#      ZOO_MY_ID: 1
#      ZOO_PORT: 2181
#      ZOO_SERVERS: server.1=zoo1:2888:3888
#
#  kafka1:
#    restart: always
#    image: registry.faza.io/kafka:latest
#    hostname: kafka1
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_EXTERNAL://${DOCKERIP:-127.0.0.1}:9092,LISTENER_DOCKER_INTERNAL://kafka1:19092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
#      KAFKA_BROKER_ID: 1
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock

  paymentservice:
    image: registry.faza.io/payment-gateway-service/payment-gateway-service:staging
    ports:
      - 3010:3010
    security_opt:
      - seccomp:unconfined
    environment:
      - MONGO_DB_NAME=test
      - MONGO_HOST=mongo
      - MONGO_USER=
      - MONGO_PASS=
      - MONGO_PORT=27017
      - RPC_HOST_PORT=3010
      - HTTP_HOST_PORT=3011
      - REDIRECT_URL_ADDRESS="https://bamanshop.com/payment/redirect"
      - ASAN_PARDAKHT_URL="https://rest.asanpardakht.net"
      - ASAN_PARDAKHT_CONF_ID=0
      - ASAN_PARDAKHT_USER_NAME=
      - ASAN_PARDAKHT_PASS=
    depends_on:
      - mongo

  mongo:
    image: registry.faza.io/mongo:4.0.10
    ports:
      - 27017:27017

  mongo-express:
    image: registry.faza.io/mongo-express:0.49
    ports:
      - 8081:8081

  stockservice:
    image: registry.faza.io/stock/stock:staging
    ports:
      - 9098:9098
    security_opt:
      - seccomp:unconfined
    environment:
      - PORT=9098
      - APP_MODE=grpc-server
      - APP_ENV=staging
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - GRPC_GO_LOG_SEVERITY_LEVEL=info
      - GRPC_GO_LOG_VERBOSITY_LEVEL=99
    depends_on:
      - redis

  redis:
    image: registry.faza.io/redis:5.0
    ports:
      - 50079:6379

